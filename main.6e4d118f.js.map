{"version":3,"sources":["scripts/main.js"],"names":["cities","editTable","table","document","querySelector","extractDataFromTable","form","createForm","changeData","input","currentValue","ceil","parentElement","value","textContent","firstElementChild","rowFirstCeil","userName","data","JSON","parse","localStorage","getItem","user","find","person","name","key","newValue","isNaN","Number","slice","replace","prepareNumber","setItem","stringify","pushNotification","options","type","title","description","block","createElement","classList","add","dataset","qa","header","append","text","body","window","setTimeout","remove","formElement","method","action","createFormElement","label","toUpperCase","typeField","required","labelSelect","select","forEach","city","option","button","selectRow","currentTr","trBody","tBodies","rows","tr","sortData","sortVariant","sortDirection","sort","a","b","strA","String","strB","arr","push","children","position","office","age","salary","switchSortDirection","target","tHead","currentDirection","newDirection","headerCollection","th","removeAttribute","renderTable","fragment","createDocumentFragment","newTbody","item","td","numb","numberFormatter","Intl","NumberFormat","format","addUser","salaryCorrect","length","addData","args","addEventListener","e","nodeName","tableData","toLowerCase","after","closest","eventObject","keyCode","focus"],"mappings":"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","file":"main.6e4d118f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst cities = [\n  'Tokyo', 'Singapore', 'London', 'New York', 'Edinburgh', 'San Francisco',\n];\nlet editTable = false;\n\nconst table = document.querySelector('table');\n\nextractDataFromTable();\n\nconst form = createForm();\n\ntable.addEventListener('click', (e) => {\n  if (e.target.nodeName === 'TH') {\n    const sortVariant = e.target.textContent.toLowerCase();\n    const sortDirection = switchSortDirection(e.target);\n    const tableData = sortData(sortVariant, sortDirection);\n\n    table.tBodies[0].remove();\n    table.tHead.after(renderTable(tableData));\n  }\n\n  if (e.target.nodeName === 'TD' && e.target.closest('tr')) {\n    selectRow(e.target.parentElement);\n  }\n});\n\ntable.addEventListener('dblclick', (e) => {\n  const ceil = e.target;\n\n  if (!editTable && ceil.nodeName === 'TD' && ceil.closest('tr')) {\n    editTable = true;\n\n    const currentValue = ceil.textContent;\n\n    ceil.textContent = '';\n\n    const input = document.createElement('input');\n\n    input.type = 'text';\n    input.classList.add('cell-input');\n    input.value = currentValue;\n\n    input.addEventListener('blur', () => {\n      changeData(input, currentValue);\n    });\n\n    input.addEventListener('keydown', function(eventObject) {\n      if (eventObject.keyCode === 13) {\n        changeData(input, currentValue);\n      }\n    });\n\n    ceil.append(input);\n    input.focus();\n  }\n});\n\nform.addEventListener('click', (e) => {\n  if (e.target.nodeName === 'BUTTON') {\n    addUser(form);\n  }\n});\n\nfunction changeData(input, currentValue) {\n  const ceil = input.parentElement;\n\n  if (input.value === '') {\n    ceil.textContent = currentValue;\n    delete ceil.firstElementChild;\n    editTable = false;\n  }\n\n  const rowFirstCeil = ceil.parentElement.firstElementChild;\n\n  let userName = rowFirstCeil.textContent;\n\n  if (rowFirstCeil === ceil) {\n    userName = currentValue;\n  }\n\n  const data = JSON.parse(localStorage.getItem('users'));\n  const user = data.find(person => person.name === userName);\n\n  for (const key in user) {\n    if (user[key] === currentValue) {\n      let newValue = input.value;\n\n      if (key === 'age') {\n        if (isNaN(newValue)) {\n          newValue = currentValue;\n        }\n\n        if (Number(newValue) < 18 || Number(newValue) > 90) {\n          newValue = currentValue;\n        }\n      }\n\n      if (key === 'salary') {\n        if (newValue[0] === '$') {\n          newValue = Number(newValue.slice(1).replace(/,/gi, ''));\n        }\n\n        if (isNaN(newValue)) {\n          newValue = currentValue;\n        } else {\n          newValue = prepareNumber(newValue);\n        }\n      }\n\n      user[key] = newValue;\n\n      localStorage.setItem('users', JSON.stringify(data));\n\n      ceil.textContent = newValue;\n      delete ceil.firstElementChild;\n      editTable = false;\n    }\n  }\n}\n\nfunction pushNotification(options) {\n  const [type, title, description] = options;\n\n  const block = document.createElement('div');\n\n  block.classList.add('notification');\n  block.classList.add(type);\n  block.dataset.qa = 'notification';\n\n  const header = document.createElement('h2');\n\n  header.classList.add('title');\n  header.textContent = title;\n  block.append(header);\n\n  const text = document.createElement('p');\n\n  text.textContent = description;\n  block.append(text);\n\n  document.body.append(block);\n\n  window.setTimeout(function() {\n    block.remove();\n  }, 2000);\n};\n\nfunction createForm() {\n  const formElement = document.createElement('form');\n\n  formElement.classList.add('new-employee-form');\n  formElement.method = 'post';\n  formElement.action = '/';\n\n  createFormElement(formElement, 'input', 'name');\n  createFormElement(formElement, 'input', 'position');\n  createFormElement(formElement, 'select', 'office');\n  createFormElement(formElement, 'input', 'age');\n  createFormElement(formElement, 'input', 'salary');\n  createFormElement(formElement, 'button', 'Save to table');\n\n  document.body.append(formElement);\n\n  return formElement;\n}\n\nfunction createFormElement(formElement, type, text) {\n  switch (type) {\n    case 'input':\n      const label = document.createElement('label');\n\n      label.textContent = `${text[0].toUpperCase()}${text.slice(1)}:`;\n\n      const input = document.createElement('input');\n      let typeField = 'text';\n\n      if (text === 'age' || text === 'salary') {\n        typeField = 'number';\n      }\n\n      input.type = typeField;\n      input.name = text;\n      input.dataset.qa = text;\n      input.required = true;\n      label.append(input);\n\n      formElement.append(label);\n      break;\n\n    case 'select':\n      const labelSelect = document.createElement('label');\n\n      labelSelect.textContent = `${text[0].toUpperCase()}${text.slice(1)}:`;\n\n      const select = document.createElement('select');\n\n      select.name = text;\n      select.dataset.qa = text;\n      select.required = true;\n\n      cities.forEach(city => {\n        const option = document.createElement('option');\n\n        option.textContent = city;\n        option.value = city;\n        select.append(option);\n      });\n\n      labelSelect.append(select);\n\n      formElement.append(labelSelect);\n      break;\n\n    case 'button':\n      const button = document.createElement('button');\n\n      button.type = 'button';\n      button.textContent = text;\n\n      formElement.append(button);\n      break;\n  }\n}\n\nfunction selectRow(currentTr) {\n  const trBody = table.tBodies[0].rows;\n\n  [...trBody].forEach(tr => {\n    tr.classList.remove('active');\n    currentTr.classList.add('active');\n  });\n}\n\nfunction sortData(sortVariant, sortDirection) {\n  const data = JSON.parse(localStorage.getItem('users'));\n\n  data.sort((a, b) => {\n    let strA = String(a[sortVariant]);\n    let strB = String(b[sortVariant]);\n\n    if (sortVariant === 'salary') {\n      strA = Number(strA.slice(1).replace(/,/gi, '.'));\n      strB = Number(strB.slice(1).replace(/,/gi, '.'));\n    }\n\n    switch (strA > strB) {\n      case true:\n        return (sortDirection === 'asc') ? 1 : -1;\n\n      case false:\n        return (sortDirection === 'asc') ? -1 : 1;\n\n      default:\n        return 0;\n    }\n  });\n\n  return data;\n}\n\nfunction extractDataFromTable() {\n  const trBody = table.tBodies[0].rows;\n  const arr = [];\n\n  [...trBody].forEach(tr => {\n    arr.push({\n      name: tr.children[0].textContent,\n      position: tr.children[1].textContent,\n      office: tr.children[2].textContent,\n      age: tr.children[3].textContent,\n      salary: tr.children[4].textContent,\n    });\n  });\n\n  localStorage.setItem('users', JSON.stringify(arr));\n}\n\nfunction switchSortDirection(target) {\n  const header = table.tHead;\n  const currentDirection = target.dataset.sort;\n  let newDirection = 'asc';\n\n  if (currentDirection && currentDirection === 'asc') {\n    newDirection = 'desc';\n  }\n\n  target.dataset.sort = newDirection;\n\n  const headerCollection = header.firstElementChild.children;\n\n  [...headerCollection].forEach(th => {\n    if (th !== target) {\n      if (th.dataset.sort) {\n        th.removeAttribute('data-sort');\n      }\n    }\n  });\n\n  return newDirection;\n}\n\nfunction renderTable(arr) {\n  const fragment = document.createDocumentFragment();\n  const newTbody = document.createElement('tbody');\n\n  arr.forEach(person => {\n    const tr = document.createElement('tr');\n\n    for (const item in person) {\n      const td = document.createElement('td');\n\n      td.textContent = person[item];\n      tr.append(td);\n    }\n\n    newTbody.append(tr);\n  });\n\n  fragment.append(newTbody);\n\n  return fragment;\n}\n\nfunction prepareNumber(numb) {\n  const numberFormatter = Intl.NumberFormat('en-US');\n\n  return `$${numberFormatter.format(Number(numb))}`;\n}\n\nfunction addUser(formElement) {\n  const userName = formElement.name.value;\n  const position = formElement.position.value;\n  const office = formElement.office.value;\n  const age = formElement.age.value;\n  const salary = formElement.salary.value;\n  const salaryCorrect = prepareNumber(salary);\n\n  let options = [];\n\n  if (userName.length < 4) {\n    options = [\n      'error',\n      'Error',\n      'The name must have more than 3 characters',\n    ];\n  }\n\n  if (position === '') {\n    options = [\n      'error',\n      'Error',\n      'Position must be specified',\n    ];\n  }\n\n  if (Number(age) < 18 || Number(age) > 90) {\n    options = [\n      'error',\n      'Error',\n      'Age must be between 18 and 90 years old',\n    ];\n  }\n\n  if (Number(salary) <= 0) {\n    options = [\n      'error',\n      'Error',\n      'You need to set the salary',\n    ];\n  }\n\n  if (options.length > 0) {\n    pushNotification(options);\n  } else {\n    if (addData(userName, position, age, salaryCorrect, office)) {\n      options = [\n        'success',\n        'Success',\n        'Employee added to database',\n      ];\n    } else {\n      options = [\n        'error',\n        'Error',\n        'Error adding to database',\n      ];\n    }\n\n    pushNotification(options);\n  }\n}\n\nfunction addData(...args) {\n  const [userName, position, age, salary, office] = args;\n\n  const data = JSON.parse(localStorage.getItem('users'));\n\n  data.push({\n    name: userName,\n    position: position,\n    office: office,\n    age: age,\n    salary: salary,\n  });\n\n  localStorage.setItem('users', JSON.stringify(data));\n\n  const tr = document.createElement('tr');\n\n  for (const item in data[data.length - 1]) {\n    const td = document.createElement('td');\n\n    td.textContent = data[data.length - 1][item];\n    tr.append(td);\n  }\n\n  table.tBodies[0].append(tr);\n\n  return true;\n}\n"]}